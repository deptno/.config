if [[ -z $ANDROID_HOME ]]; then
  export ANDROID_HOME=$HOME/Library/Android/sdk
  export PATH=$PATH:$ANDROID_HOME/emulator
  export PATH=$PATH:$ANDROID_HOME/tools
  export PATH=$PATH:$ANDROID_HOME/tools/bin
  export PATH=$PATH:$ANDROID_HOME/platform-tools
  export PATH=$PATH:~/.local/share/nvim/lsp_servers/rust
fi
export PATH=$HOME/bin:/usr/local/bin:$PATH

export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion


# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path to your oh-my-zsh installation. export ZSH="${HOME}/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH="${HOME}/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

plugins=(
  git
  zsh-autosuggestions
  zsh-syntax-highlighting
  bundler
  dotenv
  macos
  ruby
  z
  urltools
  rust
  node
  direnv
  aws
  kubectl
  kube-ps1
  kubetail
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

export EDITOR='vim'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

alias k=kubectl
alias calicoctl="kubectl exec -i -n kube-system calicoctl -- /calicoctl"
alias m=multipass
alias tt=neomutt
alias wol=$XDG_CONFIG_HOME/sh/wol_x5950.sh
alias min="open -a /Applications/Min.app"
alias ll="exa --long --all --icons --git --time-style=long-iso --color-scale --links --header --sort=mod --reverse --group-directories-first"
alias lln="exa --long --all --icons --git --time-style=long-iso --color-scale --links --header --reverse --group-directories-first"
alias w1="cd ~/workspace/src/github.com/deptno/deptno.github.io.wiki/"
alias w2="cd ~/workspace/src/github.com/deptno/wiki/"
alias hl-gh="GREP_COLOR='2;37' grep --color=always -E 'true|$' \
  | GREP_COLOR='2;36;47' grep --color=always -E 'false|$' \
  | GREP_COLOR='5;31;47' grep --color=always -Ei 'release\/|$' \
  | GREP_COLOR='1;33;41' grep --color=always -Ei 'prod\/|$' \
  | GREP_COLOR='2;32' grep --color=always -Ei 'master|APPROVED|$' \
  | GREP_COLOR='1;34' grep --color=always -E 'MERGEABLE|$' \
  | GREP_COLOR='2;37' grep --color=always -E 'UNKNOWN|MERGED|CONFLICTING|REVIEW_REQUIRED|$' \
  | GREP_COLOR='36' grep --color=always -Ei 'b2c-\d{5}|$' \
  | GREP_COLOR='1;3;4;33;41' grep --color=always -E 'Revert|$' \
  | GREP_COLOR='1;3;4;30;42' grep --color=always -E 'refs\/bisect\/good|$' \
  | GREP_COLOR='1;3;4;31;43' grep --color=always -E 'refs\/bisect\/bad|$' \
  | GREP_COLOR='1;30;47' grep --color=always -Ei 'deptno|deptno-zb|$'"
alias gpl="gh pr list \
  --json author,headRefName,baseRefName,comments,number,title,mergeable,createdAt,isDraft,state,reviewDecision,latestReviews \
  --template \
  '{{tablerow
  (\"#\"|color \"magenta\")
  (\"CREATED_AT\"|color \"magenta\")
  (\"STATE\"|color \"magenta\")
  (\"BASE\"|color \"magenta\")
  (\"HEAD\"|color \"magenta\")
  (\"CONFLICT\"|color \"magenta\")
  (\"AUTHOR\"|color \"magenta\")
  (\"DRAFT\"|color \"magenta\")
  (\"TITLE\"|color \"magenta\")
  (\"@REVIEW_DECISION\"|color \"magenta\")
  (\"LATEST_REVIEWS\"|color \"magenta\")
  (\"STATE\"|color \"magenta\")
}}
{{range .}}
{{tablerow
  .number
  (timeago .createdAt)
  .state
  .baseRefName
  (printf \"üëà %v\" .headRefName)
  .mergeable
  .author.login
  .isDraft
  .title
  (printf \"@%v\" .reviewDecision)
  (printf \"%v\" (join \",\" (pluck \"login\" (pluck \"author\" .latestReviews))))
  (printf \"%v\" (join \" \" (pluck \"state\" .latestReviews)))
}}
{{end}}'"
alias sudo="sudo "
alias watch="watch "

function gpld() {
  gpl "$@" \
  | sed '/^$/d' \
  | sed 's/[^@]COMMENTED/üí¨/g' \
  | sed 's/[^@]APPROVED/üëç/g' \
  | sed 's/[^@]CHANGES_REQUESTED/üëé/g' \
  | hl-gh;
}

if [[ $(uname -s) == "Darwin" ]]; then
  if [[ $(sysctl -n machdep.cpu.brand_string | cut -d ' ' -f1-2) == "Apple M1" ]]; then
    # alias for m1
    # alias brew="arch -arm64 brew"
    # alias ibrew="arch -x86_64 brew"
  fi
fi

export NNN_FIFO=/tmp/nnn.fifo
export NNN_PLUG='f:finder;o:fzopen;p:mocplay;d:diffs;t:nmount;v:imgview'

export HISTSIZE=1000000000
export SAVEHIST=1000000000
setopt EXTENDED_HISTORY

export GEM_HOME=~/.gem/ruby/2.6.8

function review() {
  # stash current status
  branch=@^2
  if [ ! -z "$1" ]; then
    branch=$1
  fi
  echo "$branch $1"
  git reset --mixed $(git merge-base @~ $branch)
  vim $(git diff --name-only --relative)
  git reset --hard HEAD
  git clean -fd
  git pull --rebase
}

export PATH="${PATH}:${HOME}/.krew/bin"
